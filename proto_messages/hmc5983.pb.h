/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_HMC5983_PB_H_INCLUDED
#define PB_HMC5983_PB_H_INCLUDED
#include <pb.h>

#include "vector3.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _HMC5983Readings {
    Vector3 magnetometer;
    float temperature;
    uint64_t timestamp;
/* @@protoc_insertion_point(struct:HMC5983Readings) */
} HMC5983Readings;

/* Default values for struct fields */

/* Initializer values for message structs */
#define HMC5983Readings_init_default             {Vector3_init_default, 0, 0}
#define HMC5983Readings_init_zero                {Vector3_init_zero, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define HMC5983Readings_magnetometer_tag         1
#define HMC5983Readings_temperature_tag          2
#define HMC5983Readings_timestamp_tag            3

/* Struct field encoding specification for nanopb */
extern const pb_field_t HMC5983Readings_fields[4];

/* Maximum encoded size of messages (where known) */
#define HMC5983Readings_size                     33

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define HMC5983_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
