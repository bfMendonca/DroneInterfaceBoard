/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_MOTORSINTERFACE_PB_H_INCLUDED
#define PB_MOTORSINTERFACE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MotorsInterfaceMessage {
    float motor1DC;
    float motor2Dc;
    float motor3DC;
    float motor4DC;
/* @@protoc_insertion_point(struct:MotorsInterfaceMessage) */
} MotorsInterfaceMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MotorsInterfaceMessage_init_default      {0, 0, 0, 0}
#define MotorsInterfaceMessage_init_zero         {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MotorsInterfaceMessage_motor1DC_tag      1
#define MotorsInterfaceMessage_motor2Dc_tag      2
#define MotorsInterfaceMessage_motor3DC_tag      3
#define MotorsInterfaceMessage_motor4DC_tag      4

/* Struct field encoding specification for nanopb */
extern const pb_field_t MotorsInterfaceMessage_fields[5];

/* Maximum encoded size of messages (where known) */
#define MotorsInterfaceMessage_size              20

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MOTORSINTERFACE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
