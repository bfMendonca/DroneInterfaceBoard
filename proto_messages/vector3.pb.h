/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_VECTOR3_PB_H_INCLUDED
#define PB_VECTOR3_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Vector3 {
    float x;
    float y;
    float z;
/* @@protoc_insertion_point(struct:Vector3) */
} Vector3;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Vector3_init_default                     {0, 0, 0}
#define Vector3_init_zero                        {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Vector3_x_tag                            1
#define Vector3_y_tag                            2
#define Vector3_z_tag                            3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Vector3_fields[4];

/* Maximum encoded size of messages (where known) */
#define Vector3_size                             15

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define VECTOR3_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
